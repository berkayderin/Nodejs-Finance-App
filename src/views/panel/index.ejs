<script src="https://unpkg.com/@popperjs/core@2"></script>
<script src="https://unpkg.com/tippy.js@6"></script>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div
	x-data="{
		stats: {
			monthlyData: { labels: [], incomes: [], expenses: [] },
			categoryData: { labels: [], data: [] },
			totalStats: { income: 0, expense: 0 },
			spendingGoal: null
		},
		spendingGoalModal: false,
		spendingGoalForm: {
			amount: ''
		},
		monthlyChart: null,
		categoryChart: null,
		async getStats() {
			try {
				const response = await fetch('/api/dashboard/stats')
				const data = await response.json()
				this.stats = data
				
				this.$nextTick(() => {
					if (this.monthlyChart) {
						this.monthlyChart.destroy()
					}
					if (this.categoryChart) {
						this.categoryChart.destroy()
					}
					this.initCharts()
				})
			} catch (error) {
				console.error('İstatistikler yüklenirken hata:', error)
			}
		},
		initCharts() {
			// Aylık Gelir/Gider Grafiği
			const monthlyCtx = document.getElementById('monthlyChart')?.getContext('2d')
			if (monthlyCtx) {
				this.monthlyChart = new Chart(monthlyCtx, {
					type: 'line',
					data: {
						labels: this.stats.monthlyData.labels,
						datasets: [
							{
								label: 'Gelirler',
								data: this.stats.monthlyData.incomes,
								borderColor: '#10B981',
								backgroundColor: '#10B98120',
								fill: true,
								tension: 0.4
							},
							{
								label: 'Giderler',
								data: this.stats.monthlyData.expenses,
								borderColor: '#EF4444',
								backgroundColor: '#EF444420',
								fill: true,
								tension: 0.4
							}
						]
					},
					options: {
						responsive: true,
						maintainAspectRatio: false,
						plugins: {
							title: {
								display: true,
								text: 'Aylık Gelir/Gider Grafiği',
								font: {
									size: 16
								}
							},
							legend: {
								position: 'bottom'
							}
						},
						interaction: {
							intersect: false,
							mode: 'index'
						},
						scales: {
							y: {
								beginAtZero: true,
								ticks: {
									callback: (value) => {
										return new Intl.NumberFormat('tr-TR', {
											style: 'currency',
											currency: 'TRY'
										}).format(value)
									}
								}
							}
						}
					}
				})
			}

			// Kategori Bazlı Gider Grafiği
			const categoryCtx = document.getElementById('categoryChart')?.getContext('2d')
			if (categoryCtx) {
				this.categoryChart = new Chart(categoryCtx, {
					type: 'doughnut',
					data: {
						labels: this.stats.categoryData.labels,
						datasets: [{
							data: this.stats.categoryData.data,
							backgroundColor: [
								'#10B981', '#3B82F6', '#F59E0B', '#EF4444',
								'#8B5CF6', '#EC4899', '#6366F1', '#14B8A6'
							]
						}]
					},
					options: {
						responsive: true,
						maintainAspectRatio: false,
						plugins: {
							title: {
								display: true,
								text: 'Kategori Bazlı Giderler',
								font: {
									size: 16
								}
							},
							legend: {
								position: 'bottom'
							},
							tooltip: {
								callbacks: {
									label: (context) => {
										const value = context.raw
										const total = context.dataset.data.reduce((a, b) => a + b, 0)
										const percentage = ((value / total) * 100).toFixed(1)
										const formattedValue = new Intl.NumberFormat('tr-TR', {
											style: 'currency',
											currency: 'TRY'
										}).format(value)
										return `${context.label}: ${formattedValue} (${percentage}%)`
									}
								}
							}
						}
					}
				})
			}
		},
		async submitSpendingGoal() {
			try {
				const response = await fetch('/spending-goal/create', {
					method: 'POST',
					headers: {
						'Content-Type': 'application/json'
					},
					body: JSON.stringify(this.spendingGoalForm)
				})

				if (response.ok) {
					this.spendingGoalModal = false
					this.spendingGoalForm.amount = ''
					await this.getStats()
				}
			} catch (error) {
				console.error('Harcama hedefi eklenirken hata:', error)
			}
		},
		formatCurrency(amount) {
			return new Intl.NumberFormat('tr-TR', {
				style: 'currency',
				currency: 'TRY'
			}).format(amount)
		}
	}"
	x-init="getStats"
	class="py-6"
>
	<div class="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-4 mb-8">
		<div class="bg-white overflow-hidden shadow rounded-lg">
			<div class="p-5">
				<div class="flex items-center">
					<div class="flex-shrink-0">
						<svg class="h-6 w-6 text-primary-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
							<path
								stroke-linecap="round"
								stroke-linejoin="round"
								stroke-width="2"
								d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
							/>
						</svg>
					</div>
					<div class="ml-5 w-0 flex-1">
						<dl>
							<dt class="text-sm font-medium text-gray-500 truncate">Toplam Gelir</dt>
							<dd class="text-lg font-medium text-gray-900" x-text="formatCurrency(stats.totalStats.income)"></dd>
						</dl>
					</div>
				</div>
			</div>
		</div>

		<div class="bg-white overflow-hidden shadow rounded-lg">
			<div class="p-5">
				<div class="flex items-center">
					<div class="flex-shrink-0">
						<svg class="h-6 w-6 text-red-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
							<path
								stroke-linecap="round"
								stroke-linejoin="round"
								stroke-width="2"
								d="M15 12H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z"
							/>
						</svg>
					</div>
					<div class="ml-5 w-0 flex-1">
						<dl>
							<dt class="text-sm font-medium text-gray-500 truncate">Toplam Gider</dt>
							<dd class="text-lg font-medium text-gray-900" x-text="formatCurrency(stats.totalStats.expense)"></dd>
						</dl>
					</div>
				</div>
			</div>
		</div>

		<div class="bg-white overflow-hidden shadow rounded-lg">
			<div class="p-5">
				<div class="flex items-center">
					<div class="flex-shrink-0">
						<svg class="h-6 w-6 text-gray-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
							<path
								stroke-linecap="round"
								stroke-linejoin="round"
								stroke-width="2"
								d="M3 6l3 1m0 0l-3 9a5.002 5.002 0 006.001 0M6 7l3 9M6 7l6-2m6 2l3-1m-3 1l-3 9a5.002 5.002 0 006.001 0M18 7l3 9m-3-9l-6-2m0-2v2m0 16V5m0 16H9m3 0h3"
							/>
						</svg>
					</div>
					<div class="ml-5 w-0 flex-1">
						<dl>
							<dt class="text-sm font-medium text-gray-500 truncate">Net Durum</dt>
							<dd
								class="text-lg font-medium"
								:class="stats.totalStats.income - stats.totalStats.expense >= 0 ? 'text-green-600' : 'text-red-600'"
								x-text="formatCurrency(stats.totalStats.income - stats.totalStats.expense)"
							></dd>
						</dl>
					</div>
				</div>
			</div>
		</div>

		<div class="bg-white overflow-hidden shadow rounded-lg">
			<div class="p-5">
				<div class="flex items-center">
					<div class="flex-shrink-0">
						<svg class="h-6 w-6 text-gray-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
							<path
								stroke-linecap="round"
								stroke-linejoin="round"
								stroke-width="2"
								d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"
							/>
						</svg>
					</div>
					<div class="ml-5 w-0 flex-1">
						<dl>
							<dt class="text-sm font-medium text-gray-500 truncate flex items-center">
								Aylık Harcama Hedefi
								<div
									x-init="tippy($el, { 
										content: 'Aylık harcamalarınızı kontrol altında tutmak için kendinize bir hedef belirleyebilirsiniz.',
										theme: 'gray'
									})"
									class="ml-1 cursor-help"
								>
									<svg class="h-4 w-4 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
										<path
											stroke-linecap="round"
											stroke-linejoin="round"
											stroke-width="2"
											d="M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
										/>
									</svg>
								</div>
							</dt>
							<template x-if="!stats.spendingGoal">
								<dd class="mt-1">
									<button
										@click="spendingGoalModal = true"
										class="inline-flex items-center text-sm text-primary-600 hover:text-primary-700"
									>
										<svg class="h-5 w-5 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
											<path
												stroke-linecap="round"
												stroke-linejoin="round"
												stroke-width="2"
												d="M12 6v6m0 0v6m0-6h6m-6 0H6"
											/>
										</svg>
										Hedef Belirle
									</button>
								</dd>
							</template>
							<template x-if="stats.spendingGoal">
								<dd>
									<div class="mt-1">
										<span
											class="text-lg font-medium text-gray-900"
											x-text="formatCurrency(stats.spendingGoal.amount)"
										></span>
									</div>
									<div class="mt-2">
										<div class="flex items-center">
											<div class="flex-1">
												<div class="bg-gray-200 rounded-full h-2">
													<div
														class="h-2 rounded-full"
														:class="{
															'bg-primary-500': (stats.totalStats.expense / stats.spendingGoal.amount) < 0.8,
															'bg-yellow-500': (stats.totalStats.expense / stats.spendingGoal.amount) >= 0.8 && (stats.totalStats.expense / stats.spendingGoal.amount) < 1,
															'bg-red-500': (stats.totalStats.expense / stats.spendingGoal.amount) >= 1
														}"
														:style="'width: ' + Math.min((stats.totalStats.expense / stats.spendingGoal.amount) * 100, 100) + '%'"
													></div>
												</div>
											</div>
											<span
												class="ml-2 text-sm text-gray-600"
												x-text="Math.round((stats.totalStats.expense / stats.spendingGoal.amount) * 100) + '%'"
											></span>
										</div>
									</div>
									<template x-if="stats.totalStats.expense >= stats.spendingGoal.amount">
										<div class="mt-2">
											<div
												x-init="tippy($el, { 
													content: 'Aylık harcama hedefinize ulaştınız! Lütfen daha dikkatli harcama yapın.',
													theme: 'red'
												})"
												class="inline-flex items-center text-red-600"
											>
												<svg class="h-5 w-5 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
													<path
														stroke-linecap="round"
														stroke-linejoin="round"
														stroke-width="2"
														d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"
													/>
												</svg>
												<span>Harcama limitini aştınız!</span>
											</div>
										</div>
									</template>
								</dd>
							</template>
						</dl>
					</div>
				</div>
			</div>
		</div>
	</div>

	<!-- Grafikler -->
	<div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
		<div class="bg-white p-6 rounded-lg shadow">
			<template
				x-if="stats.monthlyData.incomes.every(income => income === 0) && stats.monthlyData.expenses.every(expense => expense === 0)"
			>
				<div class="flex items-center justify-center h-[300px] text-gray-500">
					<div class="text-center">
						<svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
							<path
								stroke-linecap="round"
								stroke-linejoin="round"
								stroke-width="2"
								d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
							/>
						</svg>
						<h3 class="mt-2 text-sm font-medium">Veri Yok</h3>
						<p class="mt-1 text-sm text-gray-500">Henüz gelir veya gider kaydı bulunmuyor.</p>
					</div>
				</div>
			</template>
			<template
				x-if="!stats.monthlyData.incomes.every(income => income === 0) || !stats.monthlyData.expenses.every(expense => expense === 0)"
			>
				<canvas id="monthlyChart"></canvas>
			</template>
		</div>
		<div class="bg-white p-6 rounded-lg shadow">
			<template x-if="stats.categoryData.data.every(amount => amount === 0)">
				<div class="flex items-center justify-center h-[300px] text-gray-500">
					<div class="text-center">
						<svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
							<path
								stroke-linecap="round"
								stroke-linejoin="round"
								stroke-width="2"
								d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
							/>
						</svg>
						<h3 class="mt-2 text-sm font-medium">Veri Yok</h3>
						<p class="mt-1 text-sm text-gray-500">Henüz kategori bazlı gider kaydı bulunmuyor.</p>
					</div>
				</div>
			</template>
			<template x-if="!stats.categoryData.data.every(amount => amount === 0)">
				<canvas id="categoryChart"></canvas>
			</template>
		</div>
	</div>

	<!-- Harcama Hedefi Modal -->
	<div
		x-show="spendingGoalModal"
		class="relative z-10"
		aria-labelledby="modal-title"
		role="dialog"
		aria-modal="true"
		x-cloak
	>
		<div
			x-show="spendingGoalModal"
			x-transition:enter="ease-out duration-300"
			x-transition:enter-start="opacity-0"
			x-transition:enter-end="opacity-100"
			x-transition:leave="ease-in duration-200"
			x-transition:leave-start="opacity-100"
			x-transition:leave-end="opacity-0"
			class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity"
		></div>

		<div class="fixed inset-0 z-10 overflow-y-auto">
			<div class="flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0">
				<div
					x-show="spendingGoalModal"
					x-transition:enter="ease-out duration-300"
					x-transition:enter-start="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
					x-transition:enter-end="opacity-100 translate-y-0 sm:scale-100"
					x-transition:leave="ease-in duration-200"
					x-transition:leave-start="opacity-100 translate-y-0 sm:scale-100"
					x-transition:leave-end="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
					class="relative transform overflow-hidden rounded-lg bg-white px-4 pb-4 pt-5 text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg sm:p-6"
					@click.away="spendingGoalModal = false"
				>
					<div class="absolute right-0 top-0 pr-4 pt-4">
						<button
							type="button"
							class="rounded-md bg-white text-gray-400 hover:text-gray-500"
							@click="spendingGoalModal = false"
						>
							<span class="sr-only">Kapat</span>
							<svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
								<path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
							</svg>
						</button>
					</div>
					<div class="sm:flex sm:items-start">
						<div class="mt-3 text-center sm:mt-0 sm:text-left w-full">
							<h3 class="text-lg font-semibold leading-6 text-gray-900 mb-4">Aylık Harcama Hedefi Belirle</h3>
							<form @submit.prevent="submitSpendingGoal">
								<div class="space-y-4">
									<div>
										<label for="amount" class="block text-sm font-medium text-gray-700">Hedef Tutar</label>
										<div class="mt-1">
											<input
												type="number"
												step="0.01"
												name="amount"
												id="amount"
												x-model="spendingGoalForm.amount"
												class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-primary-600 sm:text-sm sm:leading-6"
												required
											/>
										</div>
									</div>
								</div>
								<div class="mt-5 sm:mt-4 sm:flex sm:flex-row-reverse">
									<button
										type="submit"
										class="inline-flex w-full justify-center rounded-md bg-primary-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-primary-500 sm:ml-3 sm:w-auto"
									>
										Hedef Belirle
									</button>
									<button
										type="button"
										class="mt-3 inline-flex w-full justify-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50 sm:mt-0 sm:w-auto"
										@click="spendingGoalModal = false"
									>
										İptal
									</button>
								</div>
							</form>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<!-- Sayfaya özel scriptleri tanımlayalım -->
<%- contentFor('scripts') %>
<script>
	// Tippy.js temasını özelleştirelim
	tippy.setDefaultProps({
		duration: 200,
		animation: 'shift-away'
	})

	// Kırmızı ve gri tema için özel stil
	const style = document.createElement('style')
	style.textContent = `
		.tippy-box[data-theme~='red'] {
			background-color: #EF4444;
			color: white;
		}
		.tippy-box[data-theme~='red'][data-placement^='top'] > .tippy-arrow::before {
			border-top-color: #EF4444;
		}
		.tippy-box[data-theme~='gray'] {
			background-color: #374151;
			color: white;
			font-size: 0.875rem;
		}
		.tippy-box[data-theme~='gray'][data-placement^='top'] > .tippy-arrow::before {
			border-top-color: #374151;
		}
	`
	document.head.appendChild(style)

	Chart.defaults.font.family = 'Inter var, system-ui, sans-serif'
	Chart.defaults.color = '#6b7280'
	Chart.defaults.borderColor = '#e5e7eb'
	Chart.defaults.elements.line.borderWidth = 2
	Chart.defaults.elements.point.borderWidth = 1
	Chart.defaults.elements.point.radius = 3
	Chart.defaults.elements.point.hoverRadius = 5
	Chart.defaults.plugins.tooltip.enabled = true
	Chart.defaults.animation = {
		duration: 1000,
		easing: 'easeOutQuart'
	}
</script>
