<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div
	x-data="{
		stats: {
			monthlyData: { labels: [], incomes: [], expenses: [] },
			categoryData: { labels: [], data: [] },
			totalStats: { income: 0, expense: 0 }
		},
		monthlyChart: null,
		categoryChart: null,
		async getStats() {
			try {
				const response = await fetch('/api/dashboard/stats')
				const data = await response.json()
				this.stats = data
				
				// Chart'ları güvenli bir şekilde temizle
				if (this.monthlyChart) {
					this.monthlyChart.destroy()
					this.monthlyChart = null
				}
				if (this.categoryChart) {
					this.categoryChart.destroy()
					this.categoryChart = null
				}

				// Chart'ları yeniden oluştur
				this.$nextTick(() => this.initCharts())
			} catch (error) {
				console.error('İstatistikler yüklenirken hata:', error)
			}
		},
		formatCurrency(amount) {
			return new Intl.NumberFormat('tr-TR', {
				style: 'currency',
				currency: 'TRY'
			}).format(amount)
		},
		initCharts() {
			const commonOptions = {
				responsive: true,
				maintainAspectRatio: false,
				plugins: {
					legend: {
						position: 'bottom',
						labels: {
							usePointStyle: true,
							padding: 20,
							font: {
								size: 12
							}
						}
					},
					tooltip: {
						backgroundColor: 'rgba(255, 255, 255, 0.95)',
						titleColor: '#1f2937',
						bodyColor: '#1f2937',
						borderColor: '#e5e7eb',
						borderWidth: 1,
						padding: 12,
						boxPadding: 6,
						usePointStyle: true,
						callbacks: {
							label: function(context) {
								const value = context.raw
								return new Intl.NumberFormat('tr-TR', {
									style: 'currency',
									currency: 'TRY'
								}).format(value)
							}
						}
					}
				}
			}

			// Gelir/Gider Grafiği
			const monthlyCtx = document.getElementById('monthlyChart')
			if (monthlyCtx) {
				this.monthlyChart = new Chart(monthlyCtx, {
					type: 'line',
					data: {
						labels: this.stats.monthlyData.labels,
						datasets: [
							{
								label: 'Gelirler',
								data: this.stats.monthlyData.incomes,
								borderColor: '#16a34a',
								backgroundColor: 'rgba(22, 163, 74, 0.1)',
								fill: true,
								tension: 0.3,
								borderWidth: 2,
								pointRadius: 4,
								pointHoverRadius: 6,
								yAxisID: 'y-gelir'
							},
							{
								label: 'Giderler',
								data: this.stats.monthlyData.expenses,
								borderColor: '#dc2626',
								backgroundColor: 'rgba(220, 38, 38, 0.1)',
								fill: true,
								tension: 0.3,
								borderWidth: 2,
								pointRadius: 4,
								pointHoverRadius: 6,
								yAxisID: 'y-gider'
							}
						]
					},
					options: {
						...commonOptions,
						maintainAspectRatio: false,
						aspectRatio: 2,
						plugins: {
							...commonOptions.plugins,
							title: {
								display: false
							}
						},
						scales: {
							x: {
								grid: {
									display: false
								},
								ticks: {
									padding: 10,
									font: {
										size: 12
									}
								}
							},
							'y-gelir': {
								type: 'linear',
								display: true,
								position: 'left',
								beginAtZero: true,
								border: {
									display: false
								},
								grid: {
									color: 'rgba(243, 244, 246, 0.6)'
								},
								ticks: {
									padding: 10,
									maxTicksLimit: 5,
									font: {
										size: 11
									},
									callback: function(value) {
										return new Intl.NumberFormat('tr-TR', {
											style: 'currency',
											currency: 'TRY',
											notation: 'compact',
											maximumFractionDigits: 1
										}).format(value)
									}
								}
							},
							'y-gider': {
								type: 'linear',
								display: true,
								position: 'right',
								beginAtZero: true,
								border: {
									display: false
								},
								grid: {
									display: false
								},
								ticks: {
									padding: 10,
									maxTicksLimit: 5,
									font: {
										size: 11
									},
									callback: function(value) {
										return new Intl.NumberFormat('tr-TR', {
											style: 'currency',
											currency: 'TRY',
											notation: 'compact',
											maximumFractionDigits: 1
										}).format(value)
									}
								}
							}
						},
						interaction: {
							mode: 'index',
							intersect: false
						},
						layout: {
							padding: {
								top: 20,
								right: 20,
								bottom: 20,
								left: 20
							}
						}
					}
				})
			}

			// Kategori Grafiği
			const categoryCtx = document.getElementById('categoryChart')
			if (categoryCtx) {
				this.categoryChart = new Chart(categoryCtx, {
					type: 'doughnut',
					data: {
						labels: this.stats.categoryData.labels,
						datasets: [
							{
								data: this.stats.categoryData.data,
								backgroundColor: [
									'#22c55e', // yeşil
									'#3b82f6', // mavi
									'#f59e0b', // turuncu
									'#8b5cf6', // mor
									'#ec4899', // pembe
									'#06b6d4' // turkuaz
								],
								borderWidth: 0,
								hoverOffset: 4
							}
						]
					},
					options: {
						...commonOptions,
						cutout: '75%',
						radius: '90%',
						plugins: {
							...commonOptions.plugins,
							title: {
								display: false
							}
						}
					}
				})
			}
		}
	}"
	x-init="getStats"
	class="py-6"
>
	<!-- İstatistik Kartları -->
	<div
		class="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3 mb-8"
	>
		<div class="bg-white overflow-hidden shadow rounded-lg">
			<div class="p-5">
				<div class="flex items-center">
					<div class="flex-shrink-0">
						<svg
							class="h-6 w-6 text-primary-600"
							fill="none"
							viewBox="0 0 24 24"
							stroke="currentColor"
						>
							<path
								stroke-linecap="round"
								stroke-linejoin="round"
								stroke-width="2"
								d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
							/>
						</svg>
					</div>
					<div class="ml-5 w-0 flex-1">
						<dl>
							<dt class="text-sm font-medium text-gray-500 truncate">
								Toplam Gelir
							</dt>
							<dd
								class="text-lg font-medium text-gray-900"
								x-text="formatCurrency(stats.totalStats.income)"
							></dd>
						</dl>
					</div>
				</div>
			</div>
		</div>

		<div class="bg-white overflow-hidden shadow rounded-lg">
			<div class="p-5">
				<div class="flex items-center">
					<div class="flex-shrink-0">
						<svg
							class="h-6 w-6 text-red-600"
							fill="none"
							viewBox="0 0 24 24"
							stroke="currentColor"
						>
							<path
								stroke-linecap="round"
								stroke-linejoin="round"
								stroke-width="2"
								d="M15 12H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z"
							/>
						</svg>
					</div>
					<div class="ml-5 w-0 flex-1">
						<dl>
							<dt class="text-sm font-medium text-gray-500 truncate">
								Toplam Gider
							</dt>
							<dd
								class="text-lg font-medium text-gray-900"
								x-text="formatCurrency(stats.totalStats.expense)"
							></dd>
						</dl>
					</div>
				</div>
			</div>
		</div>

		<div class="bg-white overflow-hidden shadow rounded-lg">
			<div class="p-5">
				<div class="flex items-center">
					<div class="flex-shrink-0">
						<svg
							class="h-6 w-6 text-gray-600"
							fill="none"
							viewBox="0 0 24 24"
							stroke="currentColor"
						>
							<path
								stroke-linecap="round"
								stroke-linejoin="round"
								stroke-width="2"
								d="M3 6l3 1m0 0l-3 9a5.002 5.002 0 006.001 0M6 7l3 9M6 7l6-2m6 2l3-1m-3 1l-3 9a5.002 5.002 0 006.001 0M18 7l3 9m-3-9l-6-2m0-2v2m0 16V5m0 16H9m3 0h3"
							/>
						</svg>
					</div>
					<div class="ml-5 w-0 flex-1">
						<dl>
							<dt class="text-sm font-medium text-gray-500 truncate">
								Net Durum
							</dt>
							<dd
								class="text-lg font-medium"
								:class="stats.totalStats.income - stats.totalStats.expense >= 0 ? 'text-green-600' : 'text-red-600'"
								x-text="formatCurrency(stats.totalStats.income - stats.totalStats.expense)"
							></dd>
						</dl>
					</div>
				</div>
			</div>
		</div>
	</div>

	<!-- Grafikler -->
	<div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
		<div class="bg-white p-6 rounded-lg shadow">
			<template
				x-if="stats.monthlyData.incomes.every(income => income === 0) && stats.monthlyData.expenses.every(expense => expense === 0)"
			>
				<div
					class="flex items-center justify-center h-[300px] text-gray-500"
				>
					<div class="text-center">
						<svg
							class="mx-auto h-12 w-12 text-gray-400"
							fill="none"
							viewBox="0 0 24 24"
							stroke="currentColor"
						>
							<path
								stroke-linecap="round"
								stroke-linejoin="round"
								stroke-width="2"
								d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
							/>
						</svg>
						<h3 class="mt-2 text-sm font-medium">Veri Yok</h3>
						<p class="mt-1 text-sm text-gray-500">
							Henüz gelir veya gider kaydı bulunmuyor.
						</p>
					</div>
				</div>
			</template>
			<template
				x-if="!stats.monthlyData.incomes.every(income => income === 0) || !stats.monthlyData.expenses.every(expense => expense === 0)"
			>
				<canvas id="monthlyChart"></canvas>
			</template>
		</div>
		<div class="bg-white p-6 rounded-lg shadow">
			<template
				x-if="stats.categoryData.data.every(amount => amount === 0)"
			>
				<div
					class="flex items-center justify-center h-[300px] text-gray-500"
				>
					<div class="text-center">
						<svg
							class="mx-auto h-12 w-12 text-gray-400"
							fill="none"
							viewBox="0 0 24 24"
							stroke="currentColor"
						>
							<path
								stroke-linecap="round"
								stroke-linejoin="round"
								stroke-width="2"
								d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
							/>
						</svg>
						<h3 class="mt-2 text-sm font-medium">Veri Yok</h3>
						<p class="mt-1 text-sm text-gray-500">
							Henüz kategori bazlı gider kaydı bulunmuyor.
						</p>
					</div>
				</div>
			</template>
			<template
				x-if="!stats.categoryData.data.every(amount => amount === 0)"
			>
				<canvas id="categoryChart"></canvas>
			</template>
		</div>
	</div>
</div>

<!-- Sayfaya özel scriptleri tanımlayalım -->
<%- contentFor('scripts') %>
<script>
	Chart.defaults.font.family = 'Inter var, system-ui, sans-serif'
	Chart.defaults.color = '#6b7280'
	Chart.defaults.borderColor = '#e5e7eb'
	Chart.defaults.elements.line.borderWidth = 2
	Chart.defaults.elements.point.borderWidth = 1
	Chart.defaults.elements.point.radius = 3
	Chart.defaults.elements.point.hoverRadius = 5
	Chart.defaults.plugins.tooltip.enabled = true
	Chart.defaults.animation = {
		duration: 1000,
		easing: 'easeOutQuart'
	}
</script>
